---
- name: Include OS-specific variables.
  # yamllint disable-line rule:line-length
  include_vars: "{{ ansible_os_family }}{{ ansible_distribution_major_version }}.yml"

- name: Update repositories cache
  when: ansible_os_family == 'Debian'
  apt:
    update_cache: true

- name: Ensure packages are installed
  package:
    name: "{{ nettime_packages }}"
    state: present
  register: nettime_package
  ignore_errors: true

- name: manage firewall
  when: manage_firewall
  include_tasks: firewall.yml

- name: Enable systemd-timedated
  when: nettime_package.failed
  systemd:
    name: systemd-timedated
    enabled: true
  notify: "restart timedated"

- name: Disable conflicting services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  register: service_result
  failed_when:
    - service_result is failed
    - ('Could not find' not in service_result.msg)
  loop:
    - systemd-timesyncd
    - ntpd

- name: Check if key is configured
  command: "grep '^{{ nettime_keyid }} ' {{ nettime_keyfile }}"
  register: nettime_keyed
  changed_when: false
  failed_when: false

- name: Set chrony_key
  when: nettime_keyed.rc == 0
  set_fact:
    chrony_key: "{{ nettime_keyed.stdout }}"

- name: Generate a key
  when: nettime_keyed.rc == 1
  run_once: true
  command: "chronyc keygen {{ nettime_keyid }}"
  register: keygen_result
  changed_when: false

- name: Set chrony_key
  when: nettime_keyed.rc == 1
  set_fact:
    chrony_key: "{{ keygen_result.stdout }}"

- name: Configure chrony key
  lineinfile:
    path: "{{ nettime_keyfile }}"
    regexp: '^{{ nettime_keyid }} '
    line: "{{ chrony_key }}"
    state: present
    owner: root
    group: "{{ nettime_group }}"
    mode: 0640
  notify: restart chronyd

- name: Set timezone
  when: ansible_os_family == 'RedHat'
  timezone:
    name: "{{ timezone | default('UTC') }}"
  notify: restart chronyd

- name: Is RTC time in local time zone
  shell: "timedatectl|grep -c 'RTC in local TZ: yes'"
  register: rtc_timezone
  changed_when: false
  failed_when: rtc_timezone.rc not in [0,1]

- name: Use RTC time in UTC not local time zone
  when: rtc_timezone.stdout|int == 1
  command: timedatectl set-local-rtc 0
  changed_when: true

- name: Configure chrony
  template:
    src: chrony.conf.j2
    dest: "{{ nettime_config }}"
    owner: root
    group: root
    mode: 0644
  notify: restart chronyd

- name: Set drift
  file:
    path: "{{ nettime_driftfile }}"
    owner: "{{ nettime_user }}"
    group: "{{ nettime_group }}"
    mode: 0640
    state: touch
  changed_when: false

- name: Enable chronyd
  systemd:
    name: "{{ nettime_service }}"
    enabled: true
    state: started

- name: Force time synchronization
  command: chronyc -a 'burst 4/4'
  changed_when: false


- name: ensure goss directory exists
  file:
    path: /etc/goss.d
    state: directory
    owner: root
    group: root
    mode: 0700

- name: copy goss tests template
  template:
    src: test_nettime.yml.j2
    dest: /etc/goss.d/test_nettime.yml
    owner: root
    group: root
    mode: 0644
